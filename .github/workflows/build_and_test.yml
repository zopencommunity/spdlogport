name: Build and Test

permissions:
  contents: write
  statuses: write
  actions: read
  pull-requests: write  # Add this permission to manage PR labels

on:
  issue_comment:
    types:
      - created
  pull_request_target:
    types: [opened, synchronize, reopened]
    paths-ignore:
      - 'cicd*.groovy'
      - '**/LICENSE'
      - 'README.md'
  workflow_dispatch:

jobs:
  build-and-test:
    if: (github.event.issue.pull_request && contains(github.event.comment.body, '/run tests')) || github.event_name == 'workflow_dispatch' || github.event_name == 'pull_request_target'
    uses: zopencommunity/meta/.github/workflows/build_and_test.yml@main
    secrets: inherit

  merge-pr:
    needs: build-and-test  # Wait for build-and-test to complete
    if: success()  # Only run if build-and-test succeeds
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Check if committer email is "bump-action@github"
        id: check-committer
        run: |
          echo "Checking committer email..."
          COMMITTER_EMAIL=$(git log -1 --pretty=format:'%ae')
          if [ "$COMMITTER_EMAIL" = "bump-action@github" ]; then
            echo "Committer email matches bump-action@github"
            echo "should_merge=true" >> $GITHUB_ENV
          else
            echo "Committer email does not match bump-action@github"
            echo "should_merge=false" >> $GITHUB_ENV
          fi

      - name: Merge Pull Request
        if: env.should_merge == 'true'  # Only merge if email matches
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const prNumber = context.payload.pull_request.number;
            const result = await github.pulls.merge({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: prNumber,
              merge_method: "squash" // Options: 'merge', 'squash', 'rebase'
            });
            if (result.merged) {
              console.log(`Pull request #${prNumber} was successfully merged.`);
            } else {
              throw new Error(`Failed to merge pull request #${prNumber}: ${result.message}`);
            }
